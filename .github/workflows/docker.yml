name: Docker Build and Push

on:
  push:
    branches:
      - master
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: |
          docker-compose -f docker-compose.test.yml build \
            --build-arg VCS_REF=${{ github.sha }} \
            --build-arg VERSION=$(cat VERSION)
          docker-compose -f docker-compose.test.yml up --exit-code-from tester

  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      REPOSITORY_URL: registry.hub.docker.com
      IMAGE_NAME: alerta/alerta-web
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Variables
        id: vars
        run: echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
      - name: Build Image
        run: >-
          docker build
          --build-arg VCS_REF=${{ github.sha }}
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          --build-arg VERSION=$(cat VERSION)
          -t $IMAGE_NAME
          -t $REPOSITORY_URL/$IMAGE_NAME:$(cat VERSION)
          -t $REPOSITORY_URL/$IMAGE_NAME:${{ steps.vars.outputs.SHORT_COMMIT_ID }}
          -t $REPOSITORY_URL/$IMAGE_NAME:latest .
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login $REPOSITORY_URL --username "$DOCKER_USERNAME" --password-stdin
      - name: Publish Image
        run: docker push $REPOSITORY_URL/$IMAGE_NAME

      - name: Notify Slack
        uses: alerta/actions/notify-slack@master
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,diff,author,action,issue,eventName,ref,workflow
        if: always()
